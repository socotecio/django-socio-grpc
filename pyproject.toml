[project]
requires-python = ">=3.10"

[tool.poetry]
name = "django-socio-grpc"
version = "0.1.1"
description = "Fork of django-grpc-framework with more feature maintained by the socio team. Make GRPC with django easy."
authors = ["Adrien Montagu <adrienmontagu@gmail.com>"]
license = "Apache-2.0"

[tool.poetry.scripts]
tests = "test_utils.load_tests:launch"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
django = ">=4.2"
djangorestframework = "*"
grpcio-tools = "^1.50.0"
lark-parser = "^0.12.0"
grpcio-health-checking = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
django-filter = "^2.4.0"
psycopg2-binary = "^2.8.6"
pytest-django = "^4.2.0"
freezegun = "^1.1.0"
pre-commit = "^2.19.0"
ruff = "^0.3.4"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
auto-pytabs = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
sphinx-autodoc-typehints = "*"
sphinxcontrib-apidoc = "*"
sphinxcontrib-spelling = "*"
sphinx-autobuild = "*"
myst-parser = "^2.0.0"
sphinx-autodoc2 = "^0.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint.isort]
known-third-party = ["django"]

[tool.ruff]
exclude = [
  "migrations",
  "grpc",
  "*_pb2.py",
]
line-length = 95

[tool.ruff.lint]
ignore = ["E501"]
select = [
  "E",
  "F",
  "UP",
  "B",
  "SIM",
  "I",
]
